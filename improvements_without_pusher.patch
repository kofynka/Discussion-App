Index: src/app/app.module.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/app.module.ts	(date 1559137531000)
+++ src/app/app.module.ts	(date 1559139491000)
@@ -1,18 +1,20 @@
-import { BrowserModule } from '@angular/platform-browser';
-import { NgModule } from '@angular/core';
+import {BrowserModule} from '@angular/platform-browser';
+import {NgModule} from '@angular/core';
 
-import { AppRoutingModule } from './app-routing.module';
-import { AppComponent } from './app.component';
-import { DiscussionComponent } from './discussion/discussion.component';
+import {AppRoutingModule} from './app-routing.module';
+import {AppComponent} from './app.component';
+import {DiscussionComponent} from './discussion/discussion.component';
 import {HttpClientModule} from '@angular/common/http';
-import {PusherService} from './pusher.service';
-import {FormsModule} from "@angular/forms";
-import { HomeComponent } from './home/home.component';
+import {Database} from './database.service';
+import {FormsModule} from '@angular/forms';
+import {HomeComponent} from './home/home.component';
+import {DiscussionService} from './discussion/discussion.service';
 
 @NgModule({
   declarations: [AppComponent, DiscussionComponent, HomeComponent],
   imports: [BrowserModule, AppRoutingModule, HttpClientModule, FormsModule],
-  providers: [PusherService],
+  providers: [Database, DiscussionService],
   bootstrap: [AppComponent],
 })
-export class AppModule { }
+export class AppModule {
+}
Index: src/app/database.service.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/database.service.ts	(date 1559139491000)
+++ src/app/database.service.ts	(date 1559139491000)
@@ -0,0 +1,28 @@
+import {Injectable} from '@angular/core';
+import {Message} from './discussion/discussion.component';
+import {Observable, of} from 'rxjs';
+
+
+@Injectable()
+export class Database {
+  currentId = 0;
+  messages: Message[] = [];
+
+  constructor() {
+
+  }
+
+
+  public add(message: Message): Observable<Message> {
+    message.created = new Date();
+    message.id = this.currentId++;
+
+
+
+    this.messages.push(message);
+
+    const result = Object.assign({}, message);
+
+    return of(result);
+  }
+}
Index: src/app/discussion/discussion.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/discussion/discussion.component.html	(date 1559137531000)
+++ src/app/discussion/discussion.component.html	(date 1559139491000)
@@ -1,13 +1,13 @@
 <div>
   <div class="input-area">
-    <form (submit)="sendMessage()" name="messageForm" #messageForm="ngForm">
+    <form name="messageForm" #messageForm="ngForm">
       <div>
         <input type="text" placeholder="Your name" name="name" id="name" [(ngModel)]="message.name">
         <textarea type="text" placeholder="Your message" name="message" id="message" [(ngModel)]="message.text" rows="5"></textarea>
       </div>
-      <button>
+      <button (click)="sendMessage()">
         <span data-feather="check"></span>
       </button>
     </form>
   </div>
-</div>
\ No newline at end of file
+</div>
Index: src/app/discussion/discussion.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/discussion/discussion.component.ts	(date 1559137531000)
+++ src/app/discussion/discussion.component.ts	(date 1559139491000)
@@ -1,37 +1,40 @@
-import { Component, OnInit, Output, EventEmitter } from '@angular/core';
-import { HttpClient } from '@angular/common/http';
+import {Component, EventEmitter, OnInit, Output} from '@angular/core';
+import {DiscussionService} from './discussion.service';
 
-declare const feather: any;
-export interface Message {
+
+export class Message {
   text: string;
   name: string;
+  id: number;
+  created: Date;
 }
+
+
 @Component({
   selector: 'app-discussion',
   templateUrl: './discussion.component.html',
   styleUrls: ['./discussion.component.scss'],
 })
 export class DiscussionComponent implements OnInit {
-  constructor(private http: HttpClient) {}
   @Output() onSendMessage: EventEmitter<Message> = new EventEmitter();
-  message = {
-    name: '',
-    text: '',
-  };
+
+  private message: Message;
+
+  constructor(private service: DiscussionService) {
+  }
+
+
   sendMessage() {
     if (this.message.text !== '' && this.message.name !== '') {
-      this.http
-        .post(`http://localhost:4000/messages`, this.message)
+      this.service.post(this.message)
         .subscribe((res: Message) => {
-          this.onSendMessage.emit(res);
-          this.message = {
-            name: '',
-            text: '',
-          };
+          this.onSendMessage.emit(this.message);
+          this.message = new Message();
         });
     }
   }
+
   ngOnInit() {
-    feather.replace(); 
+    this.message = new Message();
   }
-}
\ No newline at end of file
+}
Index: src/app/discussion/discussion.service.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/discussion/discussion.service.ts	(date 1559139491000)
+++ src/app/discussion/discussion.service.ts	(date 1559139491000)
@@ -0,0 +1,16 @@
+import {Injectable} from '@angular/core';
+import {HttpClient} from '@angular/common/http';
+import {Database} from '../database.service';
+import {Message} from './discussion.component';
+import {Observable} from 'rxjs';
+
+@Injectable()
+export class DiscussionService {
+  constructor(private httpClient: HttpClient, private db: Database) {
+
+  }
+
+  public post(message: Message): Observable<Message> {
+    return this.db.add(message);
+  }
+}
Index: src/app/home/home.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/home/home.component.html	(date 1559137531000)
+++ src/app/home/home.component.html	(date 1559139491000)
@@ -17,11 +17,11 @@
         <div class="pic">
           <img src="/assets/man.svg" alt="profile-img">
         </div>
-        <div class="message-text">
-          <span>{{message.name}}</span>
+        <div class="message-text" id="message-{{message.id}}">
+          <span>{{message.name}} on {{message.created | date:'short'}}</span>
           <p>{{message.text}}</p>
         </div>
       </div>
     </div>
-    <app-discussion></app-discussion>
-  </div>
\ No newline at end of file
+    <app-discussion (onSendMessage)="messageRec($event)"></app-discussion>
+  </div>
Index: src/app/home/home.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/home/home.component.ts	(date 1559137531000)
+++ src/app/home/home.component.ts	(date 1559139491000)
@@ -1,6 +1,5 @@
-import { Component, OnInit } from '@angular/core';
-import { Message } from '../discussion/discussion.component';
-import { PusherService } from '../pusher.service';
+import {Component, OnInit} from '@angular/core';
+import {Message} from '../discussion/discussion.component';
 
 @Component({
   selector: 'app-home',
@@ -9,13 +8,14 @@
 })
 
 export class HomeComponent implements OnInit {
-  constructor(private pusher: PusherService){}
-  messages: Array<Message> = [];
+
+  messages: Message[] = [];
 
   ngOnInit() {
-    const channel = this.pusher.init('discussion');
-    channel.bind('message', (data) => {
-      this.messages = this.messages.concat(data);
-    });
+
   }
-}
\ No newline at end of file
+
+  messageRec(message: Message) {
+    this.messages.push(message);
+  }
+}
Index: src/app/pusher.service.spec.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pusher.service.spec.ts	(date 1559137531000)
+++ src/app/pusher.service.spec.ts	(date 1559139491000)
@@ -1,11 +1,11 @@
 import { TestBed } from '@angular/core/testing';
-import { PusherService } from './pusher.service';
+import { Database } from './database.service';
 
-describe('PusherService', () => {
+describe('Database', () => {
   beforeEach(() => TestBed.configureTestingModule({}));
 
   it('should be created', () => {
-    const service: PusherService = TestBed.get(PusherService);
+    const service: Database = TestBed.get(Database);
     expect(service).toBeTruthy();
   });
 });
Index: src/app/pusher.service.ts
===================================================================
--- src/app/pusher.service.ts	(date 1559137531000)
+++ src/app/pusher.service.ts	(date 1559137531000)
@@ -1,15 +0,0 @@
-import { Injectable } from '@angular/core';
-    declare const Pusher: any;
-    @Injectable()
-    export class PusherService {
-      constructor() {  
-        this.pusher = new Pusher('2c4a587fd9901476e039', {
-          cluster: 'eu',
-          encrypted: true,
-        });
-      }
-      pusher;
-      public init(channel) {
-        return this.pusher.subscribe(channel);
-      }
-    }
\ No newline at end of file
